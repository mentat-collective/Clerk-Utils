{:pods {clj-kondo/clj-kondo {:version "2023.01.20"}}
 :tasks
 {:requires ([pod.borkdude.clj-kondo :as clj-kondo])
  :init
  (defn X [cmd]
    (let [args *command-line-args*]
      (if (even? (count args))
        (apply shell cmd args)
        (do (println "Please supply an even number of arguments!")
            (System/exit 1)))))

  clerk-watch
  {:doc "Start a shadow-cljs watch process that generates this project's custom JS."
   :task (X "clojure -X:nextjournal/clerk user/start!")}

  build-static
  {:doc "Generate a fresh static build."
   :task
   (apply shell
          "clojure -X:nextjournal/clerk"
          *command-line-args*)}

  release-gh-pages
  {:doc "Generate a fresh static build and release it to Github Pages."
   :task
   (do (shell "rm -rf public")
       (run 'build-static)
       (shell "npm run gh-pages"))}

  publish-local
  {:doc "Generate a fresh static build in the `public` folder and start a local
  webserver."
   :task
   (do (run 'build-static)
       (shell "npm run serve"))}

  release
  {:doc "Release the library to Clojars."
   :task (shell "clojure -T:build publish")}

  lint
  {:doc "Lint the src and dev directories with clj-kondo."
   :task (clj-kondo/print!
          (clj-kondo/run! {:lint ["src" "dev"]}))}}}
